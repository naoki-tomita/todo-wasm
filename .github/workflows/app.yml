name: app

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: app/target
        key: app-target-${{ hashFiles('full-app/Cargo.lock') }}
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: e2e/app/node_modules
        key: e2e-app-node_modules-${{ hashFiles('e2e/server/yarn.lock') }}
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: nightly
    - name: install cargo web
      run: cargo install cargo-web
    - name: install local-web-server
      working-directory: ./full-app
      run: yarn add local-web-server
    - name: Build
      working-directory: ./full-app
      run: cargo web deploy
    - name: Build
      working-directory: ./server
      run: cargo build
    - name: Run e2e
      run: echo "HELLO"
      # run: |
      #   cd ./proxy
      #   docker build -t proxy .
      #   docker run --rm -d -p 80:80 proxy:latest
      #   cd ..
      #   ./server/target/debug/server &
      #   s_pid=$!
      #   cd ./full-app
      #   ./node_modules/.bin/ws -d target/deploy/ &
      #   cd ..
      #   cd ./e2e/app
      #   yarn
      #   yarn test
      #   kill $!
